"stdlib/prelude.phs" require use

# Average
(: + 2 / ) $avg =

# Absolute value
((F64): true ) (: ) $abs fun
((F64): 0 < ) (: -1 * ) $abs fun

( F64 ) (: # Square route via newton-rhapson method
	((F64 F64) (F64) rec: # Tail-recursive helper
        ( $x $guess ) =

        # Do we have an acceptable margin of error?
        (: guess guess * x - abs x / 1.0e-15 < ) $good_enough =

        # We can improve the value by averaging with quotient
        (: x x guess / guess avg iter ) $improve =

        # Improve value until it's good enough
        (: true ) (: improve ) $cond fun
        (: good_enough ) (: guess ) $cond fun
        cond
	) $iter =

    # Start calculating with first guess being 1
    1.0 iter
) "sqrt" export
